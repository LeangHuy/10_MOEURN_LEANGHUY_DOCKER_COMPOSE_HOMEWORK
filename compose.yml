version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - 5435:5432
    volumes:
      - my_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=leanghuy
      - POSTGRES_DB=expense_tracking_db

  spring-app:
    image: "spring_image"
    build:
      context: .
    container_name: spring_app
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=leanghuy
      - POSTGRES_PASSWORD=1234
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/expense_tracking_db
      - SPRING_DATASOURCE_USERNAME=leanghuy
      - SPRING_DATASOURCE_PASSWORD=1234

    ports:
      - "8082:8080"

  # Keycloak
  keycloak_postgres:
    image: postgres:14-alpine
    volumes:
      - keycloak_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: leanghuy_keycloak
      POSTGRES_PASSWORD: 1234
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_postgres/keycloak_db
      KC_DB_USERNAME: leanghuy_keycloak
      KC_DB_PASSWORD: 1234
    ports:
      - 8080:8080
      - 8443:8443
    restart: always
    depends_on:
      - keycloak_postgres
    networks:
      - keycloak_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672

volumes:
  my_volume:
  keycloak_volume:

networks:
  keycloak_network:
    driver: bridge
